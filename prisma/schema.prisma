generator client {
  provider        = "prisma-client-js"
  output          = "../lib/generated/prisma"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  // Pooled connection for runtime (Neon's built-in pooler)
  url       = env("DATABASE_URL")
  // Direct connection for migrations and schema management
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id               String       @id @default(cuid())
  email            String       @unique
  emailVerified    DateTime?
  name             String?
  image            String?
  emailPreferences Json?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  quizResults      QuizResult[]
  sessions         Session[]
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model QuizResult {
  id             String   @id @default(cuid())
  userId         String
  topic          String
  difficulty     String
  score          Int
  totalQuestions Int
  answers        Json
  completedAt    DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([completedAt])
}
