name: CI
on: [push, pull_request]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.12.1'

jobs:
  # Shared quality checks that must pass first
  quality:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      # Quality checks in parallel (40 seconds)
      - name: Run quality checks
        run: |
          pnpm lint &
          pnpm tsc --noEmit &
          pnpm audit --audit-level=critical &
          wait

  # Test job - runs in parallel with build
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: quality  # Only run after quality checks pass
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      - name: Run tests with coverage
        run: pnpm test:ci

  # Build job - runs in parallel with test
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: quality  # Only run after quality checks pass
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_CONVEX_URL: ${{ secrets.NEXT_PUBLIC_CONVEX_URL }}
          GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
