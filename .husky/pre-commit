#!/bin/bash

# Run git-secrets to scan for secrets
git secrets --pre_commit_hook -- "$@"
if [ $? -ne 0 ]; then
    echo "❌ git-secrets detected potential secrets - commit rejected"
    exit 1
fi

# Check if any .env files are being committed
if git diff --cached --name-only | grep -E "^\.env"; then 
    echo "❌ ERROR: Attempting to commit .env file!"
    echo "Environment files should never be committed to version control."
    echo "Files detected:"
    git diff --cached --name-only | grep -E "^\.env"
    exit 1
fi

# Check for potential API keys and secrets in staged changes
# Exclude .gitleaksignore and files in docs/ from secret scanning
STAGED_FILES=$(git diff --cached --name-only | grep -v "^\.gitleaksignore$" | grep -v "^docs/" | grep -v "^TODO\.md$")

if [ -n "$STAGED_FILES" ]; then
    # Check for secrets only in non-excluded files
    if git diff --cached -- $STAGED_FILES 2>/dev/null | grep -iE "(api[_-]?key|secret|token|password)[\"'[:space:]]*[:=][\"'[:space:]]*[A-Za-z0-9]" || \
       git diff --cached -- $STAGED_FILES 2>/dev/null | grep -E "AIzaSy[A-Za-z0-9_-]{33}" || \
       git diff --cached -- $STAGED_FILES 2>/dev/null | grep -E "sk_live_[0-9a-zA-Z]{24}" || \
       git diff --cached -- $STAGED_FILES 2>/dev/null | grep -E "re_[0-9a-zA-Z_]{20,}"; then
        echo "⚠️  WARNING: Possible secret detected in staged changes!"
        echo "Please review your changes to ensure no secrets are being committed."
        echo ""
        echo "Potential secrets found in:"
        git diff --cached --name-only
        echo ""
        echo "If this is a false positive (e.g., example file or documentation),"
        echo "you can bypass this check with: git commit --no-verify"
        exit 1
    fi
fi

# Run lint-staged (existing husky functionality)
pnpm exec lint-staged